---
# 1. root홈, 패스 디렉터리 권한 및 패스 설정
  - name: find PATH line in /etc/profile
    lineinfile:
      path: /etc/profile
      regexp: '\s*PATH(\s)?='
      state: absent
    check_mode: yes
    when: ansible_distribution == 'AIX'
    register: is_PATH_Exist

    # for LINUX : sed -r -e 's/(.+)\.:/.:\1/' -e 's/(.)\.:/\1/g' -e 's/\.:(.+)/\1:./'
  - name: Move "." to end of the PATH (Not Exist in /etc/profile)
    command: echo $PATH |sed -e 's/\(.*\)\.:/.:\1/' -e 's/\(.\)\.:/\1/g' -e 's/\.:\(.*\)/\1:./' | tee -a /etc/profile
    register: command_output
    when: ansible_distribution == 'AIX' and not is_PATH_Exist
    tags: move_dot_addProfile
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: move_dot_addProfile
  
  - name: Move "." to end of the PATH (Exist in /etc/profile)
    command: sed -e 's/\(PATH = \)\(.*\)\.:/\1.:\2/' -e 's/\(PATH = .*\)\.:/\1/g' -e 's/(PATH = )\.:\(.+\)/\1\2:./' /etc/profile
    register: command_output
    when: ansible_distribution == 'AIX' and is_PATH_Exist
    tags: move_dot_modProfile
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: move_dot_modProfile




# 2. 파일 및 폴더 소유자 설정 
# (소유자 불분명한 파일 및 폴더 불필요한경우 삭제, 필요한경우 소유권 변경)
# ansible로 작업하기 적합하지 않음 -> log로 출력
  - name: find file & folder which don't have owner
    command: find / -nouser -o -nogroup -xdev -exec ls -al {} \;
    register: nouser_filelist
    when: ansible_distribution == 'AIX'
    ignore_errors: True
    tags: find_nouserfile

  - name: save file list on localhost (if exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 2. Find File&Folder which don't have owner                                    *
        *                                                                                 *
        * This files&folders don't have right owner or usergroup.                         *
        * If you want, Set the usergroup again.                                           *
        ***********************************************************************************
        {{find_nouserfile.stdout}}
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and nouser_filelist.stdout | length > 0
    tags: find_nouserfile
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_nouserfile      

  - name: save file list on localhost (if Not exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 2. Find File&Folder which don't have owner                                    *
        *                                                                                 *
        * This files&folders don't have right owner or usergroup.                         *
        * If you want, Set the usergroup again.                                           *
        ***********************************************************************************
          NOT DETECTED!
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and nouser_filelist.stdout | length <= 0  
    tags: find_nouserfile
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_nouserfile      




# 3. /etc/passwd 파일 소유자 및 권한 설정
  - name: chown&chmod root 644 /etc/passwd
    file:
      path: "/etc/passwd"
      owner: "root"
      mode: 0644
    register: command_output
    tags: chmod_etcpasswd
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_etcpasswd


 

# 4. /etc/shadow 파일 소유자 및 권한 설정
  - name: chown&chmod root 400 /etc/security/passwd
    file:
      path: "/etc/security/passwd"
      owner: "root"
      mode: 0400
    register: command_output
    tags: chmod_secpasswd
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_secpasswd




# 5. /etc/hosts 파일 소유자 및 권한 설정
  - name: chown&chmod root 600 /etc/hosts
    file:
      path: "/etc/hosts"
      owner: "root"
      mode: 0600
    register: command_output
    tags: chmod_hosts
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_hosts




# 6. /etc/inetd.conf 파일 소유자 및 권한 설정
  - name: chown&chmod root 600 /etc/inetd.conf
    file:
      path: "/etc/inetd.conf"
      owner: "root"
      mode: 0600
    register: command_output
    tags: chmod_inetd
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_inetd




# 7. /etc/syslog.conf 파일 소유자 및 권한 설정
  - name: chown&chmod root 644 /etc/syslog.conf
    file:
      path: "/etc/syslog.conf"
      owner: "root"
      mode: 0644
    register: command_output
    tags: chmod_syslog
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_syslog




# 8. /etc/services 파일 소유자 및 권한 설정
  - name: chown&chmod root 644 /etc/services
    file:
      path: "/etc/services"
      owner: "root"
      mode: 0644
    register: command_output
    tags: chmod_services
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: chmod_services




# 9. SUID, SGID, Sticky bit 설정 및 권한 설정
# 주요 실행파일의 권한에 SUID와 SGID에 대한 설정이 부여되어있는 파일
# 필요한 경우, 특정그룹에서만 사용하도록 제한 또는 일반 사용자의 SUID 사용을 제한
# 어떤 경우가 필요한 경우인지 알지 못하기때문에 ansible로 부적합 -> log로 출력
  - name: find file & folder which have SUID or SGID
    command: find / -user root -type f \( -perm -04000 -o -perm -02000 \) -xdev -exec ls -al {} \;
    register: filelist
    when: ansible_distribution == 'AIX'
    ignore_errors: True
    tags: find_suidsgid

  - name: save file list on localhost (if exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 9. Find File&Folder which have SUID or SGID                                   *
        *                                                                                 *
        * This files&folders have SUID/SGID.                                              *
        * If you want, Modify SUID/SGID. (use chgrp and chmod)                            *
        * chmod 4750 is recommended.                                                      *
        ***********************************************************************************
        {{filelist.stdout}}
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and filelist.stdout | length > 0
    tags: find_suidsgid
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_suidsgid   

  - name: save file list on localhost (if Not exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 9. Find File&Folder which have SUID or SGID                                   *
        *                                                                                 *
        * This files&folders have SUID/SGID.                                              *
        * If you want, Modify SUID/SGID. (use chgrp and chmod)                            *
        * chmod 4750 is recommended.                                                      *
        ***********************************************************************************
          NOT DETECTED!
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and filelist.stdout | length <= 0  
    tags: find_suidsgid
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_suidsgid  




# 10. 사용자, 시스템 시작파일 및 환경파일 소유자 및 권한 설정
# 홈 디렉토리 환경변수 파일의 소유자가 root또는 해당 계정으로 지정되지 않고 그 외의 사용자에 쓰기 권한이 부여된 경우
# 설정을 적용할 파일이 특정되어있지 않고, 변경할 소유자가 특정되어있지 않기때문에 ansible로 부적합




# 11. world writable 파일 점검
# 필요에 따라 삭제할 것.
  - name: find world writable file
    command: find / -type f -perm -2 -exec ls -al {} \;
    register: filelist
    when: ansible_distribution == 'AIX'
    ignore_errors: True
    tags: find_world_writable

  - name: save file list on localhost (if exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 11. Find world writable file                                                  *
        *                                                                                 *
        * World writable file can be written by anyone.                                   *
        * If you want, Remove these files or Remove Write Permissions.                    *
        ***********************************************************************************
        {{filelist.stdout}}
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and filelist.stdout | length > 0
    tags: find_world_writable
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_world_writable

  - name: save file list on localhost (if Not exist)
    blockinfile:
      create: yes
      insertafter: EOF
      path: ~/ansible_log.log
      marker: ""
      block: |
        ***********************************************************************************
        * # 11. Find world writable file                                                  *
        *                                                                                 *
        * World writable file can be written by anyone.                                   *
        * If you want, Remove these files or Remove Write Permissions.                    *
        ***********************************************************************************
          NOT DETECTED!
    delegate_to: 127.0.0.1
    register: command_output
    when: ansible_distribution == 'AIX' and filelist.stdout | length <= 0  
    tags: find_world_writable
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_world_writable




# 12. /dev에 존재하지 않는 device 파일 점검
  - name: find files which don't have major, minor number
    command: find /dev -type f -exec ls -l {} \; |grep "            " |awk '{print $9}'
    register: devfilelist
    when: ansible_distribution == 'AIX'
    ignore_errors: True
    tags: find_dev

  - name: remove file which don't have major, minor number
    file:
      path: "{{item}}"
      state: absent
    with_items: "{{devfilelist.stdout_lines}}"
    register: command_output
    when: devfilelist.stdout_lines | length > 0
    tags: find_dev
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: find_dev




# 13. hosts.equiv 사용 금지
  - name: chown&chmod root 600 /etc/hosts.equiv
    file:
      path: "/etc/hosts.equiv"
      owner: "root"
      mode: 0600
    tags: change_hostsequiv

  - name: remove '+' from hosts.equiv file 
    command: sed -e 's/^[^#]\(.*\)\+\(.*\)//' -e 's/^\+\(.*\)//' /etc/hosts.equiv |tee hosts.equiv
    register: command_output
    when: ansible_distribution == 'AIX'
    changed_when: False
    tags: change_hostsequiv
  - debug:
      var: command_output
    when: "{{var_isDebug}}"
    tags: change_hostsequiv




# 14. 접속 IP 및 포트 제한 (AIX는 default로 방화벽을 사용하지 않으므로 SKIP)
# (불특정 다수의 ssh접근을 제한)
#  - name: add network policy1 (iptables)
#    iptables:
#      chain: INPUT
#      protocol: tcp
#      source: 192.168.1.0
#      destination_port: 22
#      jump: ACCEPT
#    when: ansible_distribution == 'AIX' and {{var_networksvc}} == 'iptables'
#    tag: set_netplc
#
#  - name: add network policy2 (iptables)
#    iptables:
#      chain: INPUT
#      protocol: tcp
#      destination_port: 22
#      jump: DROP
#    when: ansible_distribution == 'AIX' and {{var_networksvc}} == 'iptables'
#    tag: set_netplc